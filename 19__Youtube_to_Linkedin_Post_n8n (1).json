{
  "name": "19. Youtube to Linkedin Post n8n",
  "nodes": [
    {
      "parameters": {
        "content": "## üöÄ YouTube to LinkedIn Automation Pipeline\n\n**Workflow Purpose:** Converts YouTube videos into engaging LinkedIn posts with human-in-the-loop review\n\n### üîÑ Process Flow:\n1. **Data Intake** ‚Üí Scheduled check for ready videos in Google Sheets\n2. **Transcript Processing** ‚Üí Extract/store video transcripts\n3. **AI Content Generation** ‚Üí Create LinkedIn-optimized posts\n4. **Human Review** ‚Üí Slack approval workflow with feedback loop\n5. **Auto Publishing** ‚Üí Post to LinkedIn with video preview\n6. **Status Tracking** ‚Üí Update completion status in sheets\n\nThis workflow covers nodes: Schedule Trigger ‚Üí Google Sheets ‚Üí Transcript Processing ‚Üí AI Generation ‚Üí Human Review ‚Üí LinkedIn Publishing",
        "height": 380,
        "width": 660,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        600,
        -1580
      ],
      "id": "9b4f3dcc-9154-404a-bf32-4feaa6b6a67c",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "## üë®‚Äçüíª Creator Information\n\n**Created by:** Lakshit Ukani  \nüîó **LinkedIn:** [Connect with me](https://www.linkedin.com/in/lakshit-ukani/)\nüîó **Youtube:** [Subscribe to my Channel](https://www.youtube.com/@lakshit-ukani?sub_confirmation=1)\n\n### ü§ù Community & Support\nüí¨ **Join Community:** [Skool Community Link](https://www.skool.com/ai-automation-club-7843)   \nüìö **Documentation:** [Full Guide & FAQ](https://developers.facebook.com/docs/instagram-platform/instagram-graph-api/reference/ig-user/media#creating)  \n\n### üìû Need Help?\n- **Quick Questions:** Comment on the YouTube video\n- **Workflow Issues:** Post in our community  \n- **Business Inquiries:** Connect via LinkedIn",
        "height": 380,
        "width": 460,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -580,
        -1580
      ],
      "id": "3cace782-1afd-425d-8b91-232ac7da2c47",
      "name": "Sticky Note8"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {}
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -760,
        -400
      ],
      "id": "0ac9a988-c2a8-4c4d-9863-014c04bd6fde",
      "name": "‚è∞ Schedule Trigger"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1QwZDdM51H8_41fqz_xsvt5xrdRAu6rLslYjCslzo9Ag",
          "mode": "list",
          "cachedResultName": "Youtube to Blog",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1QwZDdM51H8_41fqz_xsvt5xrdRAu6rLslYjCslzo9Ag/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1QwZDdM51H8_41fqz_xsvt5xrdRAu6rLslYjCslzo9Ag/edit#gid=0"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "Status",
              "lookupValue": "ready"
            }
          ]
        },
        "options": {
          "returnFirstMatch": true
        }
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        -540,
        -400
      ],
      "id": "3bc29734-7df1-4004-88ce-adc5525e45ab",
      "name": "üìä Get Ready Videos from Sheet ",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "uvQG3YEEXtu5NVSj",
          "name": "Freelance Account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "9dba7679-09b8-43d3-8562-5e139d2a28a8",
              "leftValue": "={{ $json.Transcript }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -320,
        -400
      ],
      "id": "56a4e3a8-a626-4665-8733-81e00b6e615e",
      "name": "‚ùì Check Transcript Exist or Not "
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://app.dumplingai.com/api/v1/get-youtube-transcript",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "videoUrl",
              "value": "={{ $json['Youtube Video Link'] }}"
            },
            {
              "name": "timestampsToCombine",
              "value": "5"
            },
            {
              "name": "preferredLanguage",
              "value": "en"
            },
            {
              "name": "includeTimestamps",
              "value": "true"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -100,
        -500
      ],
      "id": "c75fc0bc-3f57-4da4-83bf-01bb9b8b0ff9",
      "name": "üé¨ Get YouTube Transcript ",
      "credentials": {
        "httpHeaderAuth": {
          "id": "c7tL0bx0tbLtKE1s",
          "name": "Dumpling API"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1QwZDdM51H8_41fqz_xsvt5xrdRAu6rLslYjCslzo9Ag",
          "mode": "list",
          "cachedResultName": "Youtube to Blog",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1QwZDdM51H8_41fqz_xsvt5xrdRAu6rLslYjCslzo9Ag/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1QwZDdM51H8_41fqz_xsvt5xrdRAu6rLslYjCslzo9Ag/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "row_number": "={{ $('üìä Get Ready Videos from Sheet ').item.json.row_number }}",
            "Transcript": "={{ $('üé¨ Get YouTube Transcript ').item.json.transcript }}"
          },
          "matchingColumns": [
            "row_number"
          ],
          "schema": [
            {
              "id": "Youtube Video Link",
              "displayName": "Youtube Video Link",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Video ID",
              "displayName": "Video ID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Status",
              "displayName": "Status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Post made?",
              "displayName": "Post made?",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Transcript",
              "displayName": "Transcript",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        120,
        -500
      ],
      "id": "0b06c8e8-2390-4820-93a3-5bb16c6bcb05",
      "name": "üíæ Store Transcript",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "uvQG3YEEXtu5NVSj",
          "name": "Freelance Account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8a9698ff-4649-4992-8593-1768c09a26f5",
              "name": "transcript",
              "value": "={{ $('üìä Get Ready Videos from Sheet ').item.json.Transcript }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        120,
        -300
      ],
      "id": "75b30408-b98d-4471-bd98-6dc1e86bc989",
      "name": "üìù Set Transcript Variable "
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Here is Youtube Video Transcript:\n{{ $json.transcript }}\n\n",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=You are expert Linkedin Post writer. Make sure tone is conversational and casual. Use some emojis and joke or two. Make sure no line is longer than tweet\nBelow are some of the example in which format the Linkedin Post need to be written\n\nExample 1: \nMost companies will lay off 70% of their engineers.\n\nNot because they‚Äôre failing‚Ä¶\n\nBut because they won‚Äôt need them anymore.\n\nHere‚Äôs why this is about to get wild:\n\nRight now, LLMs can write functional code.\nIn 12‚Äì18 months? They‚Äôll write full-stack systems from prompts.\n\nThe shocking part?\n\nTo build the exact same product, a company will only need 20-30% of the engineers it has today.\n\nThis means:\n\nThe short term?\nMass layoffs.\nBrilliant devs getting blindsided.\n\nThe long term?\nCoding becomes elite.\n0.01% will still write code like rocket scientists.\nEveryone else will build apps like writing Google Docs.\n\nThink Notion + Midjourney + GitHub Copilot‚Ä¶ on steroids.\n\nEngineering is not dying.\nIt‚Äôs just shifting to the hands of prompt-native creators.\n\nAnd the ones who adapt?\nWill ship 10x faster than entire legacy teams.\n\nSo‚Ä¶\n\nAre we entering the golden age of builders or the dark age of engineers?\n\nExample 2:\nüö® Zomato just laid off 600 employees.\n\nWhy? Because their AI system, Nugget, now handles 80% of customer queries, managing 15 million+ chats a month without human intervention. üò≤\n\nBut here‚Äôs the twist.\n These weren't underperformers. In fact, they were part of Zomato's Associate Accelerator Program (ZAAP)‚Äîa program that trained 1,500 freshers for customer success roles. \nThey were earning ‚Çπ4.5 LPA. And now? Replaced by software.\n\nAI didn‚Äôt just take over‚Ä¶ it optimized the system.\n Nugget slashes costs, improves speed, and enhances accuracy. It doesn‚Äôt just replace employees‚Äîit makes the whole process leaner, faster, and cheaper.\n\nZomato‚Äôs move is a glimpse into the future of the workforce.\n\n Customer success roles are just the beginning. Tomorrow? Software engineers, marketers, analysts, even operations roles could follow.\n Not because the jobs disappear, but because AI will only need 20% of the workforce it once did.\n\nThis isn‚Äôt just about cost-cutting.\n\n It‚Äôs about survival.\n\nCompanies will shrink, but they‚Äôll be more efficient, agile, and competitive.\n\nThe question now is‚ÄîWould you trust AI to manage your job? Or your future?\n\nExample 3:\nMukesh Ambani‚Äôs daughter is using AI to disrupt the fashion industry in India. Here‚Äôs how\n\nFor years, global giants like Zara and H&M have dominated premium fashion in India. Billions in revenue, billions in data‚Ä¶\n\nbut they still don‚Äôt really know what Indians want.\n\nEnter Azorte ‚Äî the game-changing fashion brand spearheaded by Isha Ambani, Mukesh Ambani‚Äôs daughter. \n\nAnd it‚Äôs not just another retail store.\n\nWhat if I told you that shopping at Azorte feels more like stepping into the future?\n\nHere‚Äôs what‚Äôs happening inside these stores:\nAI-powered trial rooms: No more awkwardly shouting for a different size.\nRequest it with a button and it‚Äôll be brought to you.\n\nFashion Discovery Stations: These stations scan your body type and recommend perfect fits, all powered by AI.\n\nZero checkout lines: Shop, scan, and pay with your phone. No waiting in queues.\n\nBut here‚Äôs the kicker: Azorte isn‚Äôt just selling clothes. It‚Äôs collecting massive amounts of data on YOU.\n\nWhile Zara and H&M are guessing what Indians want, Azorte knows exactly what you like, what size you need, and how much you‚Äôre willing to pay. \n\nAll thanks to cutting-edge tech.\n\nAlready launched in Gurugram after successful openings in Mumbai and Pune, Azorte‚Äôs strategy is simple:\n\nBring international styles.\n\nMix it with Indian preferences.\n\nOffer it at prices lower than H&M and Zara.\n\nWhat looks like a fashion store? It‚Äôs actually Ambani‚Äôs calculated move to dominate the $100 billion Indian fashion market. \n\nA move that foreign competitors can‚Äôt match ‚Äî because they don‚Äôt have the tech to do it.\n\nSo, have you visited Azorte yet?\n\n Would you choose a local, tech-powered brand over international giants like Zara or H&M?\n\nDrop your thoughts below\n\nFollow for more insights on how India‚Äôs billionaires are reshaping industries with cutting-edge tech.\n\nExample 4:\nHave you ever wondered why super rich people buy expensive paintings?\n\nThe real reason would shock you!\nIt's how they multiply 5 crore rupees into 15 crore rupees overnight and that too legally.\nSounds impossible?\n\nLet me give you a hint : It's the same reason why rich people buy expensive paintings.\n\nHere is how it works in 3 steps:\n\nStep one. They buy an artwork for 5 crore rupees at a luxury auction house.\n\nStep two. They activate their secret network of art galleries, critics, and publications to create massive hype around the painting.\n\nNow here's where it gets crazy. The same painting suddenly becomes worth 50 crore rupees.\nBut wait. The real genius move? They donate it.\nLet me break down the math for you.\n\nWith a tax rate of 30 percent, donating a painting worth 50 crore rupees saves them 15 crore rupees in taxes.\nLet that sink in for a moment.\nThey only spent 5 crore rupees on the painting. \nBut they saved 15 crore rupees in taxes. That's a pure profit of 10 crore rupees, completely legal.\n\nThis is exactly why ultra rich people are so obsessed with art. It was never about the paintings. It's about the money hack that works every single time.\n\nThe one percent have been using this strategy for decades, and now you know why. Every time you see an ultra rich person donating art to a museum, you'll know what's really happening behind the scenes.\n\nSave this before it gets taken down. And follow for more wealth secrets they don't teach in school.\n\n\nJust train yourself how this post are written \nThings to note:\n1. Use First three lines of the post to drive the attention\n2. There are three part in post - The Hook (Make people click on see more), The Story (Which keeps the user engaged), CTA (End with CTA to make reader take action)\n\nQuick Tips:\n1. Avoid bulky long paragraphs\n2. Break the post into small lines\n3. Make it readable and mobile optimized\n4. Keep it short and simple\n5. Use 3-4 hashtags\n6. Be authentic"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        400,
        -500
      ],
      "id": "54ca40e4-bcc5-4729-a1c1-56264b3d89c8",
      "name": "ü§ñ AI LinkedIn Post Generator"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1-mini",
          "mode": "list",
          "cachedResultName": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        740,
        80
      ],
      "id": "1754362d-6a06-41eb-9b96-5e3b6681209c",
      "name": "üéØ OpenAI Chat Model ",
      "credentials": {
        "openAiApi": {
          "id": "69W0MY1rH5ycGoOb",
          "name": "OpenAi account 2"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $execution.id }}"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        880,
        80
      ],
      "id": "afc6ee01-e146-4234-a664-1b57fbe77b0b",
      "name": "üß† Simple Memory"
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n\t\"type\": \"object\",\n\t\"properties\": {\n\t\t\"post\": {\n\t\t\t\"type\": \"string\"\n\t\t}\n\t}\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        1020,
        80
      ],
      "id": "4ee34585-ed3c-4ae6-91f2-3d152c12af79",
      "name": "üìä Structured Output Parser"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "32a280f0-9f53-4014-90b9-b07b8e007f46",
              "name": "post",
              "value": "={{ $json.output.post }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        780,
        -500
      ],
      "id": "f926eb80-61b7-46a7-836a-b458de5b77d7",
      "name": "‚úèÔ∏è Edit Fields"
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "operation": "sendAndWait",
        "select": "channel",
        "channelId": {
          "__rl": true,
          "value": "C08UC4EEWFR",
          "mode": "list",
          "cachedResultName": "blog-human-in-loop"
        },
        "message": "={{ $json.post }}",
        "responseType": "customForm",
        "formFields": {
          "values": [
            {
              "fieldLabel": "Status",
              "fieldType": "dropdown",
              "fieldOptions": {
                "values": [
                  {
                    "option": "Approve"
                  },
                  {
                    "option": "Disapprove"
                  }
                ]
              },
              "requiredField": true
            },
            {
              "fieldLabel": "Feedback",
              "placeholder": "Enter your Feedback"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.3,
      "position": [
        1100,
        -500
      ],
      "id": "27405f06-0eeb-4071-8f48-b6045f33cdfc",
      "name": "üí¨ Get Feedback from Slack",
      "webhookId": "d6429295-2699-41ae-bcf1-10ee65ba9cf6",
      "credentials": {
        "slackOAuth2Api": {
          "id": "kHGpOK5jZdxAAIIA",
          "name": "Techsunami Slack account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": false,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "d2c0f2ef-3060-45d5-8050-332b6d514dbe",
              "leftValue": "={{ $json.data.Status }}",
              "rightValue": "Approve",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {
          "ignoreCase": true
        }
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1440,
        -500
      ],
      "id": "eefab49d-6010-4367-84aa-c02a663688c9",
      "name": "‚úÖ If Approved?"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=\"Based on the original post: {{ $('‚úèÔ∏è Edit Fields').item.json.post }}\nAnd the human feedback:  {{ $json.data.Feedback }}\nPlease revise the content accordingly...\"\n\n",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "You are the expert agent on writing Linkedin Post.\nYou will get the Human Feedback on the post which AI agent has already generated. You have the memory which has all the information regarding previous version of post."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        1200,
        -280
      ],
      "id": "6d5c0431-d583-42f3-b797-46549ee65880",
      "name": "üîÑ AI Post Reviser"
    },
    {
      "parameters": {
        "jsCode": "const post = $('‚úèÔ∏è Edit Fields').first().json.post\n  .replace(/\\n/g, \"\\\\n\")\n  .replace(/\"/g, \"'\");\n\nreturn [\n  { json: { post } }\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1820,
        -520
      ],
      "id": "a6827f26-08d6-4ce5-9c0f-75f090622c38",
      "name": "üîó Replace Line Breaks"
    },
    {
      "parameters": {
        "jsCode": "// n8n Code Node - Extract Video ID from YouTube URL\n// Input: YouTube URL\n// Output: Video ID\n\nconst youtubeUrl = $('üìä Get Ready Videos from Sheet ').first().json['Youtube Video Link'];\n\nif (!youtubeUrl) {\n  throw new Error('No YouTube URL provided');\n}\n\nfunction extractVideoId(url) {\n  const patterns = [\n    /(?:youtube\\.com\\/watch\\?v=)([^&\\n?#]+)/, // youtube.com/watch?v=\n    /(?:youtu\\.be\\/)([^&\\n?#]+)/, // youtu.be/\n    /(?:youtube\\.com\\/embed\\/)([^&\\n?#]+)/, // youtube.com/embed/\n    /(?:youtube\\.com\\/v\\/)([^&\\n?#]+)/, // youtube.com/v/\n    /^([a-zA-Z0-9_-]{11})$/ // Direct video ID\n  ];\n  \n  for (const pattern of patterns) {\n    const match = url.match(pattern);\n    if (match && match[1]) {\n      return match[1];\n    }\n  }\n  \n  throw new Error('Could not extract video ID from URL');\n}\n\ntry {\n  const videoId = extractVideoId(youtubeUrl);\n  \n  return {\n    video_id: videoId,\n    original_url: youtubeUrl,\n    success: true\n  };\n  \n} catch (error) {\n  return {\n    error: error.message,\n    original_url: youtubeUrl,\n    success: false\n  };\n}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2020,
        -520
      ],
      "id": "f7ff36d4-6c60-46b4-aae6-fe54413f1485",
      "name": "üÜî Get Video ID"
    },
    {
      "parameters": {
        "resource": "video",
        "operation": "get",
        "videoId": "={{ $json.video_id }}",
        "options": {}
      },
      "type": "n8n-nodes-base.youTube",
      "typeVersion": 1,
      "position": [
        2220,
        -520
      ],
      "id": "620caac5-8e1d-4290-a022-b241d086a960",
      "name": "üì∫ Get Title & Thumbnail",
      "credentials": {
        "youTubeOAuth2Api": {
          "id": "zdlNrv7ePhPVRU1O",
          "name": "Freelance YouTube account"
        }
      }
    },
    {
      "parameters": {
        "url": "https://api.linkedin.com/v2/userinfo",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1820,
        -320
      ],
      "id": "7b117d9d-939f-4006-8b6d-a74a9f672f4f",
      "name": "üë§ Get LinkedIn User ID",
      "credentials": {
        "httpHeaderAuth": {
          "id": "sPlC9jjGIeOPBPJZ",
          "name": "Lakshit Linkedin"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.linkedin.com/v2/ugcPosts",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"author\": \"urn:li:person:{{ $json.sub }}\",\n    \"lifecycleState\": \"PUBLISHED\",\n    \"specificContent\": {\n        \"com.linkedin.ugc.ShareContent\": {\n            \"shareCommentary\": {\n                \"text\": \"{{ $('üîó Replace Line Breaks').item.json.post }}\"\n            },\n            \"shareMediaCategory\": \"ARTICLE\",\n            \"media\": [\n                {\n                    \"status\": \"READY\",\n                    \"originalUrl\": \"{{ $('üìä Get Ready Videos from Sheet ').item.json['Youtube Video Link'] }}\",\n                    \"title\": {\n                        \"text\": \"{{ $('üì∫ Get Title & Thumbnail').item.json.snippet.title }}\"\n                    },\n                    \"thumbnails\": [{\n                        \"url\": \"{{ $('üì∫ Get Title & Thumbnail').item.json.snippet.thumbnails.high.url }}\"\n                    }]\n                }\n            ]\n        }\n    },\n    \"visibility\": {\n        \"com.linkedin.ugc.MemberNetworkVisibility\": \"PUBLIC\"\n    }\n} ",
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2220,
        -320
      ],
      "id": "a75dca83-c989-490c-9919-36387fd00958",
      "name": "üì§ LinkedIn Media Post ",
      "credentials": {
        "httpHeaderAuth": {
          "id": "sPlC9jjGIeOPBPJZ",
          "name": "Lakshit Linkedin"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1QwZDdM51H8_41fqz_xsvt5xrdRAu6rLslYjCslzo9Ag",
          "mode": "list",
          "cachedResultName": "Youtube to Blog",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1QwZDdM51H8_41fqz_xsvt5xrdRAu6rLslYjCslzo9Ag/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1QwZDdM51H8_41fqz_xsvt5xrdRAu6rLslYjCslzo9Ag/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "row_number": "={{ $('üìä Get Ready Videos from Sheet ').item.json.row_number }}",
            "Video Title": "={{ $('üì∫ Get Title & Thumbnail').item.json.snippet.title }}",
            "Video Thumbnail ": "={{ $('üì∫ Get Title & Thumbnail').item.json.snippet.thumbnails.high.url }}",
            "Video ID": "={{ $('üì∫ Get Title & Thumbnail').item.json.id }}",
            "Status": "completed",
            "Post Made?": "yes",
            "Linkedin Post Text": "={{ $('üîó Replace Line Breaks').item.json.post }}"
          },
          "matchingColumns": [
            "row_number"
          ],
          "schema": [
            {
              "id": "Youtube Video Link",
              "displayName": "Youtube Video Link",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Video Title",
              "displayName": "Video Title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Video Thumbnail ",
              "displayName": "Video Thumbnail ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Video ID",
              "displayName": "Video ID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Status",
              "displayName": "Status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Transcript",
              "displayName": "Transcript",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Post Made?",
              "displayName": "Post Made?",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Linkedin Post Text",
              "displayName": "Linkedin Post Text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        2020,
        -200
      ],
      "id": "d8f528c3-ca7e-47f0-a87c-4b6f06c78292",
      "name": "‚úÖ Update Sheet Status",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "uvQG3YEEXtu5NVSj",
          "name": "Freelance Account"
        }
      }
    },
    {
      "parameters": {
        "content": "## üìä Smart Data Management\n",
        "height": 620,
        "width": 1160
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -900,
        -660
      ],
      "id": "7c4f5924-9a0d-41d6-a05e-5b35784a7b3c",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "## ü§ñ AI-Powered Content Creation\n",
        "height": 620,
        "width": 640,
        "color": 2
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        300,
        -660
      ],
      "id": "b3052212-feff-4398-bd61-ce105edbe727",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "content": "## üí¨ Human-in-the-Loop Quality Control",
        "height": 620,
        "width": 700,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        980,
        -660
      ],
      "id": "a249ced7-8b1d-4b98-8ab0-c053b1c94bc2",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "content": "## üì§ LinkedIn Publishing Pipeline",
        "height": 620,
        "width": 680,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1740,
        -660
      ],
      "id": "47bc9ca8-40c5-424c-a9e5-3b999e03f0cb",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "content": "## üìä Smart Data Management\n\n**Google Sheets Integration:**\n- Filters videos with \"ready\" status\n- Stores transcripts automatically\n- Tracks completion status\n- Maintains video metadata\n\n**Transcript Handling:**\n- Checks if transcript exists to avoid duplicate API calls\n- Uses Dumpling AI for accurate transcript extraction\n- Supports multiple languages with timestamp options\n\nCovers: Get Ready Videos ‚Üí Check Transcript ‚Üí Store Transcript ‚Üí Update Status",
        "height": 380,
        "width": 660
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -680,
        -1100
      ],
      "id": "e7fe9791-2823-474e-a7f5-5929162b2bc6",
      "name": "Sticky Note6"
    },
    {
      "parameters": {
        "content": "## ü§ñ AI-Powered Content Creation\n\n**LinkedIn Post Generation:**\n- Analyzes YouTube transcript content\n- Creates engaging, LinkedIn-optimized posts\n- Follows proven LinkedIn post structures\n- Maintains conversational, casual tone\n- Includes emojis and engagement hooks\n\n**AI Configuration:**\n- GPT-4.1-nano model for efficiency\n- Structured output parsing\n- Memory retention for context\n- Custom prompts with examples\n\nCovers: Set Transcript ‚Üí AI Agent ‚Üí OpenAI Model ‚Üí Memory ‚Üí Output Parser ‚Üí Edit Fields",
        "height": 420,
        "width": 600,
        "color": 2
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        300,
        -1120
      ],
      "id": "baa8aa75-abe4-43c9-9f31-f87c53eadc0d",
      "name": "Sticky Note7"
    },
    {
      "parameters": {
        "content": "## üí¨ Human-in-the-Loop Quality Control\n\n**Slack Integration:**\n- Sends generated posts for human review\n- Custom form with Approve/Disapprove options\n- Feedback collection for improvements\n- Automated routing based on decision\n\n**Revision Process:**\n- AI revises content based on human feedback\n- Maintains original context and requirements\n- Iterative improvement capability\n- Quality assurance before publishing\n\nCovers: Slack Feedback ‚Üí Approval Check ‚Üí AI Reviser ‚Üí Content Refinement",
        "height": 360,
        "width": 600,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1020,
        -1100
      ],
      "id": "27271cfa-5f27-4482-8512-4b5c4a99d6e9",
      "name": "Sticky Note9"
    },
    {
      "parameters": {
        "content": "## üì§ LinkedIn Publishing Pipeline\n\n**Content Preparation:**\n- Formats text for LinkedIn API compatibility\n- Extracts YouTube video metadata\n- Prepares rich media attachments\n- Gets user profile information\n\n**Auto Publishing:**\n- Posts to LinkedIn with video preview\n- Includes thumbnail and title\n- Updates tracking sheet automatically\n- Maintains publishing history\n\nCovers: Format Content ‚Üí Get Video Data ‚Üí LinkedIn API ‚Üí Update Status",
        "height": 360,
        "width": 620,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1780,
        -1100
      ],
      "id": "fd5353c9-38ad-4e8f-b86a-8f926a399280",
      "name": "Sticky Note3"
    }
  ],
  "pinData": {
    "üí¨ Get Feedback from Slack": [
      {
        "json": {
          "data": {
            "Status": "Approve",
            "Feedback": ""
          }
        }
      }
    ]
  },
  "connections": {
    "‚è∞ Schedule Trigger": {
      "main": [
        [
          {
            "node": "üìä Get Ready Videos from Sheet ",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üìä Get Ready Videos from Sheet ": {
      "main": [
        [
          {
            "node": "‚ùì Check Transcript Exist or Not ",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "‚ùì Check Transcript Exist or Not ": {
      "main": [
        [
          {
            "node": "üé¨ Get YouTube Transcript ",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "üìù Set Transcript Variable ",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üé¨ Get YouTube Transcript ": {
      "main": [
        [
          {
            "node": "üíæ Store Transcript",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üíæ Store Transcript": {
      "main": [
        [
          {
            "node": "ü§ñ AI LinkedIn Post Generator",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üìù Set Transcript Variable ": {
      "main": [
        [
          {
            "node": "ü§ñ AI LinkedIn Post Generator",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ü§ñ AI LinkedIn Post Generator": {
      "main": [
        [
          {
            "node": "‚úèÔ∏è Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üéØ OpenAI Chat Model ": {
      "ai_languageModel": [
        [
          {
            "node": "ü§ñ AI LinkedIn Post Generator",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "üîÑ AI Post Reviser",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "üß† Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "ü§ñ AI LinkedIn Post Generator",
            "type": "ai_memory",
            "index": 0
          },
          {
            "node": "üîÑ AI Post Reviser",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "üìä Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "ü§ñ AI LinkedIn Post Generator",
            "type": "ai_outputParser",
            "index": 0
          },
          {
            "node": "üîÑ AI Post Reviser",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "‚úèÔ∏è Edit Fields": {
      "main": [
        [
          {
            "node": "üí¨ Get Feedback from Slack",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üí¨ Get Feedback from Slack": {
      "main": [
        [
          {
            "node": "‚úÖ If Approved?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "‚úÖ If Approved?": {
      "main": [
        [
          {
            "node": "üîó Replace Line Breaks",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "üîÑ AI Post Reviser",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üîÑ AI Post Reviser": {
      "main": [
        [
          {
            "node": "‚úèÔ∏è Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üîó Replace Line Breaks": {
      "main": [
        [
          {
            "node": "üÜî Get Video ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üÜî Get Video ID": {
      "main": [
        [
          {
            "node": "üì∫ Get Title & Thumbnail",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üì∫ Get Title & Thumbnail": {
      "main": [
        [
          {
            "node": "üë§ Get LinkedIn User ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üë§ Get LinkedIn User ID": {
      "main": [
        [
          {
            "node": "üì§ LinkedIn Media Post ",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üì§ LinkedIn Media Post ": {
      "main": [
        [
          {
            "node": "‚úÖ Update Sheet Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "182f7414-898c-408a-900b-b8449255ae78",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "353ac65d120d2007b8a1503e85a96651a9b2cbb94b0334693ebac2129fa6a7ee"
  },
  "id": "jAG4zwbP6sGVHWcR",
  "tags": []
}